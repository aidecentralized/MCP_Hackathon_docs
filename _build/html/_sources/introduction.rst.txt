Introduction to Model Context Protocol (MCP)
==========================================

What is MCP?
-----------

The Model Context Protocol (MCP) is an open standard that defines how applications interact with large language models (LLMs). It allows applications to provide context for LLMs in a standardized way, separating the concerns of providing context from the actual LLM interaction.

MCP lets you build servers that expose data and functionality to LLM applications in a secure, standardized way. Think of it like a web API, but specifically designed for LLM interactions.

MCP allows models to:

1. **Request information** from the application through resources
2. **Take actions** through function calling with tools
3. **Generate structured prompts** for specific use cases

Core Concepts
------------

MCP defines several core primitives:

.. list-table::
   :header-rows: 1
   :widths: 20 30 50

   * - Primitive
     - Who Controls
     - Description
   * - Resources
     - Application
     - Contextual data managed by the client application. Models can request resources to get information (files, API data, etc.).
   * - Tools
     - Model
     - Functions exposed to the LLM to take actions. Models can call tools to perform computations or produce side effects.
   * - Prompts
     - User
     - Interactive templates invoked by user choice. Users choose prompts from options provided by the application.
   * - Images
     - Application
     - Visual data that can be shared with or generated by models.
   * - Context
     - Application
     - Access to MCP capabilities within tools and resources.

Benefits of MCP
--------------

* **Reliability**: Models can request exactly what they need instead of hallucinating.
* **Capability**: Models can take actions in the real world through well-defined interfaces.
* **Customization**: Applications can guide model behavior through structured prompts.
* **Interoperability**: A standard protocol works across different models and applications.
* **Type Safety**: Strong typing for context and data across the protocol.

About This Documentation
----------------------

This documentation will guide you through:

1. Getting started with the MCP Python SDK
2. Building MCP servers to expose resources, tools, and prompts
3. Creating MCP clients to connect to servers
4. Exploring advanced topics and best practices

For the full specification, visit the `official MCP documentation <https://modelcontextprotocol.io>`_ or the `MCP specification <https://spec.modelcontextprotocol.io>`_. 